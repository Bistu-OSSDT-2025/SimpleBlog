<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>前端博客系统 - 搜索与分类</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .blog-post {
            margin-bottom: 30px;
            padding: 20px;
            border-radius: 5px;
            background-color: #f8f9fa;
        }
        .blog-post:hover {
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .post-content {
            white-space: pre-line;
        }
        .edit-delete-btns {
            margin-top: 15px;
        }
        .category-badge {
            cursor: pointer;
        }
        .search-container {
            margin-bottom: 20px;
        }
        .category-filter {
            margin-bottom: 20px;
        }
        .active-category {
            background-color: #0d6efd !important;
            color: white !important;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="#">前端博客</a>
            <button class="btn btn-primary ms-auto" id="newPostBtn">写新文章</button>
        </div>
    </nav>

    <div class="container mt-4">
        <!-- 搜索框 -->
        <div class="search-container">
            <div class="input-group">
                <input type="text" class="form-control" id="searchInput" placeholder="搜索文章...">
                <button class="btn btn-outline-secondary" type="button" id="searchBtn">搜索</button>
                <button class="btn btn-outline-danger" type="button" id="clearSearchBtn">清除</button>
            </div>
        </div>
        
        <!-- 分类筛选 -->
        <div class="category-filter">
            <span class="badge bg-secondary category-badge me-2 active-category" data-category="all">全部</span>
            <span id="categoryList"></span>
            <button class="btn btn-sm btn-outline-primary ms-2" id="manageCategoriesBtn">管理分类</button>
        </div>
        
        <!-- 文章列表 -->
        <div id="postsList"></div>
    </div>

    <!-- 文章编辑模态框 -->
    <div class="modal fade" id="postModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">新建文章</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="postForm">
                        <input type="hidden" id="postId">
                        <div class="mb-3">
                            <label for="postTitle" class="form-label">标题</label>
                            <input type="text" class="form-control" id="postTitle" required>
                        </div>
                        <div class="mb-3">
                            <label for="postContent" class="form-label">内容</label>
                            <textarea class="form-control" id="postContent" rows="8" required></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="postCategory" class="form-label">分类</label>
                            <select class="form-select" id="postCategory">
                                <option value="">无分类</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                    <button type="button" class="btn btn-primary" id="savePostBtn">保存</button>
                </div>
            </div>
        </div>
    </div>

    <!-- 文章详情模态框 -->
    <div class="modal fade" id="postDetailModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="detailTitle"></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="post-content" id="detailContent"></div>
                    <div class="text-muted mt-3" id="detailDate"></div>
                    <div class="mt-2" id="detailCategory"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">关闭</button>
                </div>
            </div>
        </div>
    </div>

    <!-- 分类管理模态框 -->
    <div class="modal fade" id="categoryModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">管理分类</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <div class="input-group">
                            <input type="text" class="form-control" id="newCategoryInput" placeholder="新分类名称">
                            <button class="btn btn-primary" type="button" id="addCategoryBtn">添加</button>
                        </div>
                    </div>
                    <ul class="list-group" id="categoriesList">
                        <!-- 分类列表将在这里动态生成 -->
                    </ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">关闭</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // 初始化变量
        const postsList = document.getElementById('postsList');
        const newPostBtn = document.getElementById('newPostBtn');
        const postModal = new bootstrap.Modal(document.getElementById('postModal'));
        const postDetailModal = new bootstrap.Modal(document.getElementById('postDetailModal'));
        const categoryModal = new bootstrap.Modal(document.getElementById('categoryModal'));
        const postForm = document.getElementById('postForm');
        const savePostBtn = document.getElementById('savePostBtn');
        const modalTitle = document.getElementById('modalTitle');
        const searchInput = document.getElementById('searchInput');
        const searchBtn = document.getElementById('searchBtn');
        const clearSearchBtn = document.getElementById('clearSearchBtn');
        const categoryList = document.getElementById('categoryList');
        const manageCategoriesBtn = document.getElementById('manageCategoriesBtn');
        const postCategorySelect = document.getElementById('postCategory');
        const newCategoryInput = document.getElementById('newCategoryInput');
        const addCategoryBtn = document.getElementById('addCategoryBtn');
        const categoriesList = document.getElementById('categoriesList');
        
        // 状态变量
        let currentSearchTerm = '';
        let currentCategory = 'all';
        
        // 加载时初始化
        document.addEventListener('DOMContentLoaded', () => {
            initCategories();
            renderPosts();
            setupEventListeners();
        });
        
        function setupEventListeners() {
            // 文章相关
            newPostBtn.addEventListener('click', showNewPostModal);
            savePostBtn.addEventListener('click', savePost);
            
            // 搜索相关
            searchBtn.addEventListener('click', performSearch);
            clearSearchBtn.addEventListener('click', clearSearch);
            searchInput.addEventListener('keyup', (e) => {
                if (e.key === 'Enter') performSearch();
            });
            
            // 分类相关
            manageCategoriesBtn.addEventListener('click', showCategoryModal);
            addCategoryBtn.addEventListener('click', addNewCategory);
        }
        
        // 初始化分类
        function initCategories() {
            if (!localStorage.getItem('blogCategories')) {
                const defaultCategories = ['技术', '生活', '旅行', '美食'];
                localStorage.setItem('blogCategories', JSON.stringify(defaultCategories));
            }
            renderCategoryFilters();
        }
        
        // 渲染分类筛选器
        function renderCategoryFilters() {
            const categories = getCategories();
            categoryList.innerHTML = '';
            
            categories.forEach(category => {
                const badge = document.createElement('span');
                badge.className = 'badge bg-secondary category-badge me-2';
                badge.textContent = category;
                badge.setAttribute('data-category', category);
                badge.addEventListener('click', filterByCategory);
                categoryList.appendChild(badge);
            });
            
            // 更新文章表单中的分类选项
            updateCategorySelectOptions();
        }
        
        // 更新文章表单中的分类选项
        function updateCategorySelectOptions() {
            postCategorySelect.innerHTML = '<option value="">无分类</option>';
            getCategories().forEach(category => {
                const option = document.createElement('option');
                option.value = category;
                option.textContent = category;
                postCategorySelect.appendChild(option);
            });
        }
        
        // 渲染文章列表
        function renderPosts() {
            let posts = getPosts();
            
            // 应用分类筛选
            if (currentCategory !== 'all') {
                posts = posts.filter(post => post.category === currentCategory);
            }
            
            // 应用搜索筛选
            if (currentSearchTerm) {
                const term = currentSearchTerm.toLowerCase();
                posts = posts.filter(post => 
                    post.title.toLowerCase().includes(term) || 
                    post.content.toLowerCase().includes(term)
                );
            }
            
            postsList.innerHTML = '';
            
            if (posts.length === 0) {
                postsList.innerHTML = '<div class="alert alert-info">没有找到符合条件的文章</div>';
                return;
            }
            
            posts.forEach(post => {
                const postElement = document.createElement('div');
                postElement.className = 'blog-post';
                postElement.innerHTML = `
                    <h3>${post.title}</h3>
                    ${post.category ? `<span class="badge bg-info">${post.category}</span>` : ''}
                    <div class="post-content">${post.content.substring(0, 100)}${post.content.length > 100 ? '...' : ''}</div>
                    <div class="text-muted mt-2">${new Date(post.date).toLocaleString()}</div>
                    <div class="edit-delete-btns">
                        <button class="btn btn-sm btn-outline-primary view-btn" data-id="${post.id}">查看全文</button>
                        <button class="btn btn-sm btn-outline-secondary edit-btn" data-id="${post.id}">编辑</button>
                        <button class="btn btn-sm btn-outline-danger delete-btn" data-id="${post.id}">删除</button>
                    </div>
                `;
                postsList.appendChild(postElement);
            });
            
            // 添加查看、编辑、删除按钮事件
            document.querySelectorAll('.view-btn').forEach(btn => {
                btn.addEventListener('click', viewPost);
            });
            
            document.querySelectorAll('.edit-btn').forEach(btn => {
                btn.addEventListener('click', editPost);
            });
            
            document.querySelectorAll('.delete-btn').forEach(btn => {
                btn.addEventListener('click', deletePost);
            });
        }
        
        // 查看文章详情
        function viewPost(e) {
            const postId = e.target.getAttribute('data-id');
            const post = getPostById(postId);
            
            document.getElementById('detailTitle').textContent = post.title;
            document.getElementById('detailContent').textContent = post.content;
            document.getElementById('detailDate').textContent = `发布于 ${new Date(post.date).toLocaleString()}`;
            
            const detailCategory = document.getElementById('detailCategory');
            if (post.category) {
                detailCategory.innerHTML = `<span class="badge bg-info">${post.category}</span>`;
            } else {
                detailCategory.innerHTML = '';
            }
            
            postDetailModal.show();
        }
        
        // 显示新建文章模态框
        function showNewPostModal() {
            postForm.reset();
            document.getElementById('postId').value = '';
            modalTitle.textContent = '新建文章';
            updateCategorySelectOptions();
            postModal.show();
        }
        
        // 编辑文章
        function editPost(e) {
            const postId = e.target.getAttribute('data-id');
            const post = getPostById(postId);
            
            document.getElementById('postId').value = post.id;
            document.getElementById('postTitle').value = post.title;
            document.getElementById('postContent').value = post.content;
            modalTitle.textContent = '编辑文章';
            
            // 设置分类选择
            updateCategorySelectOptions();
            if (post.category) {
                postCategorySelect.value = post.category;
            }
            
            postModal.show();
        }
        
        // 删除文章
        function deletePost(e) {
            if (confirm('确定要删除这篇文章吗？')) {
                const postId = e.target.getAttribute('data-id');
                const posts = getPosts().filter(post => post.id !== postId);
                localStorage.setItem('blogPosts', JSON.stringify(posts));
                renderPosts();
            }
        }
        
        // 保存文章
        function savePost() {
            const title = document.getElementById('postTitle').value.trim();
            const content = document.getElementById('postContent').value.trim();
            const postId = document.getElementById('postId').value;
            const category = document.getElementById('postCategory').value;
            
            if (!title || !content) {
                alert('标题和内容不能为空！');
                return;
            }
            
            const posts = getPosts();
            let updatedPosts;
            
            if (postId) {
                // 更新现有文章
                updatedPosts = posts.map(post => {
                    if (post.id === postId) {
                        return { ...post, title, content, category };
                    }
                    return post;
                });
            } else {
                // 添加新文章
                const newPost = {
                    id: Date.now().toString(),
                    title,
                    content,
                    category,
                    date: new Date().toISOString()
                };
                updatedPosts = [newPost, ...posts];
            }
            
            localStorage.setItem('blogPosts', JSON.stringify(updatedPosts));
            postModal.hide();
            renderPosts();
        }
        
        // 执行搜索
        function performSearch() {
            currentSearchTerm = searchInput.value.trim();
            renderPosts();
        }
        
        // 清除搜索
        function clearSearch() {
            searchInput.value = '';
            currentSearchTerm = '';
            renderPosts();
        }
        
        // 按分类筛选
        function filterByCategory(e) {
            // 更新活动分类样式
            document.querySelectorAll('.category-badge').forEach(badge => {
                badge.classList.remove('active-category');
            });
            e.target.classList.add('active-category');
            
            currentCategory = e.target.getAttribute('data-category');
            renderPosts();
        }
        
        // 显示分类管理模态框
        function showCategoryModal() {
            renderCategoriesList();
            categoryModal.show();
        }
        
        // 渲染分类管理列表
        function renderCategoriesList() {
            const categories = getCategories();
            categoriesList.innerHTML = '';
            
            if (categories.length === 0) {
                categoriesList.innerHTML = '<li class="list-group-item">暂无分类</li>';
                return;
            }
            
            categories.forEach((category, index) => {
                const li = document.createElement('li');
                li.className = 'list-group-item d-flex justify-content-between align-items-center';
                li.innerHTML = `
                    ${category}
                    <button class="btn btn-sm btn-outline-danger delete-category-btn" data-index="${index}">删除</button>
                `;
                categoriesList.appendChild(li);
            });
            
            // 添加删除分类按钮事件
            document.querySelectorAll('.delete-category-btn').forEach(btn => {
                btn.addEventListener('click', deleteCategory);
            });
        }
        
        // 添加新分类
        function addNewCategory() {
            const categoryName = newCategoryInput.value.trim();
            
            if (!categoryName) {
                alert('分类名称不能为空！');
                return;
            }
            
            const categories = getCategories();
            
            if (categories.includes(categoryName)) {
                alert('该分类已存在！');
                return;
            }
            
            categories.push(categoryName);
            localStorage.setItem('blogCategories', JSON.stringify(categories));
            
            newCategoryInput.value = '';
            renderCategoriesList();
            renderCategoryFilters();
        }
        
        // 删除分类
        function deleteCategory(e) {
            const index = e.target.getAttribute('data-index');
            const categories = getCategories();
            
            // 检查是否有文章使用该分类
            const postsWithCategory = getPosts().filter(post => post.category === categories[index]);
            
            if (postsWithCategory.length > 0) {
                alert('无法删除该分类，因为有文章正在使用它。请先修改或删除这些文章。');
                return;
            }
            
            if (confirm(`确定要删除分类 "${categories[index]}" 吗？`)) {
                categories.splice(index, 1);
                localStorage.setItem('blogCategories', JSON.stringify(categories));
                renderCategoriesList();
                renderCategoryFilters();
                
                // 如果当前筛选的是被删除的分类，重置为"全部"
                if (currentCategory === categories[index]) {
                    currentCategory = 'all';
                    document.querySelector('.category-badge[data-category="all"]').classList.add('active-category');
                    renderPosts();
                }
            }
        }
        
        // 获取所有分类
        function getCategories() {
            const categoriesJson = localStorage.getItem('blogCategories');
            return categoriesJson ? JSON.parse(categoriesJson) : [];
        }
        
        // 获取所有文章
        function getPosts() {
            const postsJson = localStorage.getItem('blogPosts');
            return postsJson ? JSON.parse(postsJson) : [];
        }
        
        // 根据ID获取文章
        function getPostById(id) {
            return getPosts().find(post => post.id === id);
        }
    </script>
</body>
</html>
